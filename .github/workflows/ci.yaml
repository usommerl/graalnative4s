name: ci

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3.0.1
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 11
    - name: Run tests
      run: sbt coverage test coverageReport
    - name: Upload coverage reports
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
        verbose: true
  create-github-release-draft:
    needs: [ci]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3.0.1
    - name: Create GitHub release draft
      uses: release-drafter/release-drafter@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        version: ${{ github.ref }}
  build-docker-images:
    needs: [ci]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3.0.1
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 11
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1.13.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_WRITE_PACKAGES }}
    - name: Create and publish a docker image with a UPX compressed executable
      run: export UPX_COMPRESSION='--best'; sbt ';docker;dockerPush'
    - name: Create and publish a docker image without compression
      run: sbt ';docker;dockerPush'
    - name: Remove image with UPX compressed executable
      run: docker rmi $(docker images -q 'ghcr.io/usommerl/graalnative4s*upx*')
    - name: Tag remaining image for Google Container Registry
      run: |
        export IMAGE_GHCR=$(docker images ghcr.io/usommerl/graalnative4s --format "{{.Repository}}:{{.Tag}}")
        export IMAGE_GCR=$(echo $IMAGE_GHCR | sed 's/ghcr.io\/usommerl/eu.gcr.io\/usommerl-02/')
        docker tag $IMAGE_GHCR $IMAGE_GCR
        echo "image_gcr=$IMAGE_GCR" >> $GITHUB_ENV
    - name: Login to Google Container Registry
      uses: docker/login-action@v1.13.0
      with:
        registry: eu.gcr.io
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY_JSON }}
    - name: Push image to Google Container Registry
      run: docker push ${{ env.image_gcr }}
